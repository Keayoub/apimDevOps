name: Deploy Infra Weather API

on:  
  # push:
  #   paths:
  #     - 'weatherApi/**'
  workflow_dispatch:

env:
  LOCATION: 'eastus'
  AZURE_WEBAPP_PACKAGE_PATH: 'artifact'

jobs:
  create-azure-resource-dev:

    environment: DEV
    env:
      RESOURCE_GROUP_NAME: 'apim-weather-rg'

    runs-on: ubuntu-latest
      
    steps:      
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Create Resource Group
        run: |
          az group create -n ${{ vars.WEATHER_API_RESOURCE_GROUP }} -l ${{ env.LOCATION }}

      - name: Build bicep template
        run: |
         bicep build ./weatherApi/infra/infra.bicep  

      - name: Deploy Azure Resource Manager (ARM) Template
        id: armDeployment
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.WEATHER_API_RESOURCE_GROUP }}
          template: ./weatherApi/infra/infra.json
          parameters: location=${{ env.LOCATION}}     

      - uses: gliech/create-github-secret-action@v1
        name: Write Web App URL WEATHERAPI Dev
        with:
          name: WEBAPP_WEATHERAPI_URL_DEV
          value: ${{ steps.armDeployment.outputs.url }}
          pa_token: ${{ secrets.PA_TOKEN }}                     
  
  create-azure-resource-prod:
    needs:
      - create-azure-resource-dev
    
    runs-on: ubuntu-latest
    environment: PROD

    steps:      
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Create Resource Group
        run: |
          az group create -n ${{ vars.WEATHER_API_RESOURCE_GROUP }} -l ${{ env.LOCATION }}

      - name: Build bicep template
        run: |
         bicep build ./weatherApi/infra/infra.bicep  

      - name: Deploy Azure Resource Manager (ARM) Template
        id: armDeployment
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.WEATHER_API_RESOURCE_GROUP }}
          template: ./weatherApi/infra/infra.json
          parameters: location=${{ env.LOCATION}} webappname=${{ vars.WEATHER_WEBAPP_NAME }} appServicePlanName=${{ vars.WEATHER_WEBAPP_NAME }}-asp }}    

      - uses: gliech/create-github-secret-action@v1
        name: Write Web App URL WEATHERAPI PROD
        with:
          name: WEBAPP_WEATHERAPI_URL_PROD
          value: ${{ steps.armDeployment.outputs.url }}
          pa_token: ${{ secrets.PA_TOKEN }}                               