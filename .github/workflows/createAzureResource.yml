name: Deploy Azure APIM (OpsTeam)

on:  
  push:
    paths:
      - 'opsTeam/**'
  workflow_dispatch:

env:  
  LOCATION: 'eastus'
  BASE_REPO_URL: 'https://raw.githubusercontent.com/hugogirard/apimDevOps/main/opsTeam/'


jobs:
  deploy-dev:
    env:
      RESOURCE_GROUP_NAME: 'rg-apim-bicep-dev'
    
    environment: DEV

    runs-on: ubuntu-latest
  
    steps:      
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
                          
      - name: Deploy Azure Resource Manager (Bicep) Template
        id: deployAzRes
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}    
          scope: subscription      
          region: ${{ env.LOCATION }}
          template: ./opsTeam/master.bicep
          parameters: environmentValue=dev rgName=${{ env.RESOURCE_GROUP_NAME }} repoBaseUrl=${{ env.BASE_REPO_URL }} location=${{ env.LOCATION}} publisherEmail=${{ secrets.PUPLISHER_EMAIL }} publisherName=${{ secrets.PUBLISHER_NAME }}

      - uses: gliech/create-github-secret-action@v1
        with:
          name: APIM_DEV_NAME
          value: ${{ steps.deployAzRes.outputs.apiManegementName }}
          pa_token: ${{ secrets.PA_TOKEN }}             
  
  deploy-prod:
    needs: deploy-dev
    env:
      RESOURCE_GROUP_NAME: 'rg-apim-bicep-prod'
    
    environment: PROD

    runs-on: ubuntu-latest
  
    steps:      
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
                                
      - name: Deploy Azure Resource Manager (ARM) Template
        id: deployAzRes
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          scope: subscription      
          region: ${{ env.LOCATION }}
          template: ./opsTeam/master.json
          parameters: environmentValue=prod rgName=${{ env.RESOURCE_GROUP_NAME }} repoBaseUrl=${{ env.BASE_REPO_URL }}  location=${{ env.LOCATION}} publisherEmail=${{ secrets.PUPLISHER_EMAIL }} publisherName=${{ secrets.PUBLISHER_NAME }}      

      - uses: gliech/create-github-secret-action@v1
        with:
          name: APIM_PROD_NAME
          value: ${{ steps.deployAzRes.outputs.apiManegementName }}
          pa_token: ${{ secrets.PA_TOKEN }}                
