name: Deploy Fibonacci API

on:  
  push:
    paths:
      - 'fibonacciApi/**'
  workflow_dispatch:

env:
  LOCATION: 'eastus'
  AZURE_WEBAPP_PACKAGE_PATH: 'artifact'

jobs:
  create-azure-resource-dev:
    
    env:
      RESOURCE_GROUP_NAME: 'apim-fibonacci-rg'
      
    runs-on: ubuntu-latest
    
    outputs:
      webAppName: ${{ steps.armDeployment.outputs.webAppName }}
      webAppUrl: ${{ steps.armDeployment.outputs.url }}

    steps:      
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Create Resource Group
        run: |
          az group create -n ${{ env.RESOURCE_GROUP_NAME }} -l ${{ env.LOCATION }}
                          
      - name: Deploy Azure Resource Manager (ARM) Template
        id: armDeployment
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./fibonacciApi/infra/infra.json
          parameters: location=${{ env.LOCATION}}
  
  create-azure-resource-prod:
    
    env:
      RESOURCE_GROUP_NAME: 'apim-fibonacci-prod-rg'
            
    runs-on: ubuntu-latest
    
    outputs:
      webAppName: ${{ steps.armDeployment.outputs.webAppName }}

    steps:      
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Create Resource Group
        run: |
          az group create -n ${{ env.RESOURCE_GROUP_NAME }} -l ${{ env.LOCATION }}
                          
      - name: Deploy Azure Resource Manager (ARM) Template
        id: armDeployment
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./fibonacciApi/infra/infra.json
          parameters: location=${{ env.LOCATION}}

  build-api:        
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Dotnet 3.3.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x'

      - name: dotnet build and publish
        working-directory: ./fibonacciApi/src
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/fibonacciApi'          
          
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:          
          name: artifact        
          path: './fibonacciApi/src/${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/fibonacciApi'
        
  deploy-dev:        
    needs: 
      - build-api   
      - create-azure-resource-dev
    
    environment: DEV
    
    runs-on: ubuntu-latest    

    steps:
      - uses: actions/checkout@v2

      - name: Download Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          # Artifact name
          name: artifact

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    

      - name: 'Deploy Azure WebApp'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ needs.create-azure-resource-dev.outputs.webAppName }}

      - name: Deploy API in APIM        
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          template: ./fibonacciApi/template/api.json
          parameters: WebUrl=${{ needs.create-azure-resource-dev.outputs.webAppUrl }} location=${{ env.LOCATION}}                    

  deploy-prod:        
    needs:             
      - deploy-dev
      - create-azure-resource-prod
    
    environment: prod
    
    runs-on: ubuntu-latest    

    steps:
      - uses: actions/checkout@v2

      - name: Download Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          # Artifact name
          name: artifact

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    

      - name: 'Deploy Azure WebApp'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ needs.create-azure-resource-prod.outputs.webAppName }}          
